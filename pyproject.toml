[project]
name = "pyrlament"
description = "Pyrlament"
version = "0.1"
license = "Proprietary"
authors = [
    {name = "Bohdan Bobrowski", email = "bohdan@bobrowski.com.pl"}
]
dependencies = [
    "Flask",
    "numpy",
    "pydantic",
]

[project.optional-dependencies]
dev = [
    "autoflake",
    "black",
    "isort",
    "mypy",
    "ruff",
    "pipreqs",
]

[tool.ruff]
line-length = 120
extend-exclude = [
    # TODO: try to keep these lines empty
]

[tool.poetry]
name = "pyrlament"
version = "0.0.1"
description = ""
authors = ["Bohdan Bobrowski <bohdan@bobrowski.com.pl>"]
readme = "README.md"
packages = [
    {"include" = "pyrlament"},
]

[tool.poetry.dependencies]
python = "^3.10"
Flask = "^2.3.2"
numpy = "^1.25.0"
pydantic = "^2.0.2"

[tool.poetry.group.dev.dependencies]
autoflake = "^2.1.1"
black = "^23.3.0"
isort = "^5.12.0"
mypy = "^1.2.0"
ruff = "^0.0.264"
faker = "^18.6.2"
coverage = "^7.2.6"
types-python-slugify = "^8.0.0.2"
python-slugify = "^8.0.1"
no-implicit-optional = "^1.3"
pydevd-pycharm = "^232.5150.120"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.10.0"
httpx-oauth = "^0.11.2"
asgi-lifespan = "^2.1.0"

[tool.poetry.scripts]
start = "flask run"

[tool.coverage.run]
omit = [".*", "*/site-packages/*", "*/tests/*"]

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
fail_under = 80

[tool.coverage.html]
directory = "tests/coverage"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

